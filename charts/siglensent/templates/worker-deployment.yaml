apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.worker.deployment.replicas }}
  selector:
    matchLabels:
      app: worker-node
  template:
    metadata:
      labels:
        app: worker-node
      annotations:
        checksum/config: sha256-checksum-placeholder
    spec:
      serviceAccountName: {{ .Release.Name }}-service-account
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:1000 /siglens/data']
        volumeMounts:
        - name: data-volume
          mountPath: /siglens/data
      containers:
      - name: worker-container
        image: {{ .Values.registry.image }}
        imagePullPolicy: {{ .Values.registry.imagePullPolicy }}
        command: ["/siglens/sigscalr"]
        args: ["--config", "/config/server.yaml"]
        ports:
        - containerPort: {{ .Values.worker.deployment.ports.ingest }}
        volumeMounts:
        - mountPath: /siglens/data
          name: data-volume
        - mountPath: /config
          name: worker-config
        - mountPath: /license
          name: license-volume
        {{- if .Values.config.tls.enabled }}
        - mountPath: /certs
          name: cert-volume
        {{- end }}
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: gcp-pd-pvc
      - name: worker-config
        configMap:
          name: worker-configmap
      - name: license-volume
        secret:
          secretName: {{ .Release.Name }}-license-secret
          items:
          - key: license
            path: license.txt
        {{- if .Values.config.tls.enabled }}
      - name: cert-volume
        secret:
          secretName: {{ .Values.ingress.tlsSecret }}
        {{- end }}