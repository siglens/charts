global:
  namespace: siglensent
# Overrides for the ingress-nginx subchart.
ingress-nginx:
  namespaceOverride: siglensent

# Overrides for the cert-manager subchart.
cert-manager:
  namespace: siglensent

queryHost: siglens.example.com
ingestHost: ingest.siglens.example.com

pvc:
  size: 20Gi

storageClass:
  diskType: pd-standard

ingestService:
  selector:
    app: worker-node
  port: 8081
  targetPort: 8081

queryService:
  selector:
    app: worker-node
  port: 5122
  targetPort: 5122

ingress:
  tlsSecret: ingress-tls

# If TLS is enabled, these settings are used to gererate a certificate.
acme:
  useProductionCertificate: true
  registrationEmail: "you@example.com"

# images require a license. To specify your license, set "licenseBase64" to the
# output of `cat /path/to/licenseKey.txt | base64`.
secrets:
  licenseBase64: ""

# Annotations for pod privileges. Needed for setups with S3 (which is required
# for multinode) so the pods can read and write to S3.
serviceAccountAnnotations:
  # Example:
  # eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/YourRole

# You can add other configs here that siglens supports (e.g., from your
# server.yaml used to run siglens locally)
#
# Note: Don't include any of the following keys even though you may have them
# in your server.yaml; they are already set by the Helm chart if needed:
# - isIngestNode
# - isQueryNode
# - etcd
config:
  tls:
    enabled: true
    certificatePath: /certs/tls.crt
    privateKeyPath: /certs/tls.key

  # Address port for SigLens ingestion server
  ingestPort: 8081

  # Address port for SigLens query server, including UI
  queryPort: 5122

  # Location for storing local node data
  dataPath: data/

  # field name to use as a timestamp key
  timestampKey: timestamp

  # Where the license is stored within the container
  licenseKeyPath: /license/license.txt

  raft:
    ssInstanceName: "raft-node"
  worker:
    ssInstanceName: "worker-node"

raft:
  deployment:
    replicas: 1 # Number of replicas for the Raft server
    ports:
      raft: 2379
    storage:
      size: "10Gi"

worker:
  deployment:
    replicas: 3 # Number of replicas for the Worker server
    ports:
      ingest: 8081


registry:
  # dockerConfigBase64 is used for pulling the SigLens image from a private registry.
  # Not needed for public registries. If you're using a private registry, set this to the output
  # of `cat ~/.docker/config.json | base64`.
  dockerConfigBase64: ""
  image: public.ecr.aws/l3t9n5v5/siglens-enterprise:0.2.21-ent1
  imagePullPolicy: Always