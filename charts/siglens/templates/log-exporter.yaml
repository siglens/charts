{{- if .Values.logsExporter.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "siglens.fullname" . }}-logs-exporter
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "siglens-fluentd.labels" . | nindent 4 }}
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      {{- include "siglens-fluentd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "siglens-fluentd.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccount: {{ include "siglens.serviceAccountName" . }}
      serviceAccountName: {{ include "siglens.serviceAccountName" . }}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: "{{ .Values.logsExporter.image.repository }}:{{ .Values.logsExporter.image.tag }}"
        imagePullPolicy: {{ .Values.logsExporter.image.pullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: {{ include "siglens.fullname" . }}
          - name: FLUENT_ELASTICSEARCH_PATH
            value: "/elastic"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "{{ .Values.siglens.configs.ingestPort }}"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
            value: "false"
          - name: FLUENT_UID
            value: "0"
          - name: FLUENTD_SYSTEMD_CONF
            value: "disable"
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        # When actual pod logs in /var/lib/docker/containers, the following lines should be used.
        - name: dockercontainerlogdirectory
          mountPath: /var/lib/docker/containers
          readOnly: true
        # When actual pod logs in /var/log/pods, the following lines should be used.
        - name: dockerpodlogdirectory
          mountPath: /var/log/pods
          readOnly: true
        - name: fluentdconfig
          mountPath: /fluentd/etc
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: dockercontainerlogdirectory
        hostPath:
          path: /var/lib/docker/containers
      - name: dockerpodlogdirectory
        hostPath:
          path: /var/log/pods
      - name: fluentdconfig
        configMap:
          name: {{ .Chart.Name }}-fluentd-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-fluentd-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "siglens-fluentd.labels" . | nindent 4}}
    kubernetes.io/cluster-service: "true"
data:
  fluent.conf: |
    <match fluent.**>
        @type null
    </match>
    <source>
        @type tail
        path /var/log/containers/*.log
        pos_file /var/log/containers.log.pos
        tag kubernetes.*
        read_from_head true
        <parse>
          @type multi_format
          <pattern>
            format json
          </pattern>
          <pattern>
            format none
          </pattern>
        </parse>
    </source>
    <filter kubernetes.**>
        @type kubernetes_metadata
    </filter>
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      remove_keys $.kubernetes.namespace_id,$.kubernetes.pod_id,$.kubernetes.master_url,$.kubernetes.container_image_id,$.docker.container_id,$.docker.namespace_labels
    </filter>
    <match kubernetes.**>
        @type elasticsearch_dynamic
        @log_level info
        host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
        port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
        path "#{ENV['FLUENT_ELASTICSEARCH_PATH'] || '/elastic/'}"
        scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
        ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'false'}"
        ssl_version "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
        reload_connections true
        index_name kubernetes-logs
        <buffer>
            flush_mode interval
            flush_interval 30s
            flush_thread_count 2
            retry_max_interval 30
            retry_forever true
        </buffer>
    </match>
{{ end }}